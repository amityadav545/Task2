[{"/Users/infranix/Desktop/nextjs /Task/task-app/src/index.js":"1","/Users/infranix/Desktop/nextjs /Task/task-app/src/App.js":"2","/Users/infranix/Desktop/nextjs /Task/task-app/src/reportWebVitals.js":"3","/Users/infranix/Desktop/nextjs /Task/task-app/src/Pages/Home.js":"4","/Users/infranix/Desktop/nextjs /Task/task-app/src/Components/NavBar.js":"5","/Users/infranix/Desktop/nextjs /Task/task-app/src/Pages/Registration.js":"6","/Users/infranix/Desktop/nextjs /Task/task-app/src/Pages/SignIn.js":"7","/Users/infranix/Desktop/nextjs /Task/task-app/src/Components/UserTable.js":"8","/Users/infranix/Desktop/nextjs /Task/task-app/src/Utils/Api.js":"9"},{"size":322,"mtime":1692266316000,"results":"10","hashOfConfig":"11"},{"size":607,"mtime":1692275563000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1692266033000,"results":"13","hashOfConfig":"11"},{"size":659,"mtime":1692275719000,"results":"14","hashOfConfig":"11"},{"size":1201,"mtime":1692340849000,"results":"15","hashOfConfig":"11"},{"size":5983,"mtime":1692337539000,"results":"16","hashOfConfig":"11"},{"size":3795,"mtime":1692340000000,"results":"17","hashOfConfig":"11"},{"size":3359,"mtime":1692339478000,"results":"18","hashOfConfig":"11"},{"size":2031,"mtime":1692338560000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1yg5f2o",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/infranix/Desktop/nextjs /Task/task-app/src/index.js",[],[],[],"/Users/infranix/Desktop/nextjs /Task/task-app/src/App.js",["51"],[],"\n\nimport * as ReactDOM from \"react-dom/client\";\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./Pages/Home\";\nimport Registration from \"./Pages/Registration\";\nimport SignIn from \"./Pages/SignIn\";\nfunction App() {\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Registration />,\n    },\n    {\n      path: \"/signin\",\n      element: <SignIn />,\n    },\n    {\n      path: \"/Home\",\n      element: <Home />,\n    },\n  ]);\n  return (\n    <>\n      <RouterProvider router={router} />\n    </>\n  );\n}\n\nexport default App;\n","/Users/infranix/Desktop/nextjs /Task/task-app/src/reportWebVitals.js",[],[],"/Users/infranix/Desktop/nextjs /Task/task-app/src/Pages/Home.js",["52"],[],"import React, { useEffect } from 'react'\nimport NavBar from '../Components/NavBar'\nimport UserTable from '../Components/UserTable'\nimport { useNavigate } from 'react-router-dom';\n\nconst Home = () => {\n    const token = localStorage.getItem(\"token\");\n    const navigate = useNavigate();\n    useEffect(() => {\n        if (token) {\n\n        }\n        else {\n            navigate(\"/\");\n        }\n    }, [token])\n    return (\n        <div>\n            <div>\n                <NavBar />\n            </div>\n            <div>\n\n                <div>\n                    <UserTable />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","/Users/infranix/Desktop/nextjs /Task/task-app/src/Components/NavBar.js",[],[],"/Users/infranix/Desktop/nextjs /Task/task-app/src/Pages/Registration.js",[],[],"/Users/infranix/Desktop/nextjs /Task/task-app/src/Pages/SignIn.js",[],[],"/Users/infranix/Desktop/nextjs /Task/task-app/src/Components/UserTable.js",["53","54","55"],[],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport Api from '../Utils/Api';\n\n\n\n\n\nconst UserTable = () => {\n    const [users, setUsers] = useState([]);\n    const [status, setStatue] = useState(false)\n    const navigate = useNavigate()\n    const handleDelete = async (id) => {\n\n        console.log(`Delete user with ID: ${id}`);\n        try {\n            const res = await Api.deleteUser(id);\n            if (res.success == 1) {\n\n                setStatue(!status)\n            }\n\n        } catch (error) {\n            console.error('API error:', error);\n            navigate('/signin');\n        }\n    };\n\n    const getAllUsers = async () => {\n        try {\n            const res = await Api.getUsers();\n            if (res.success == 1) {\n\n                setUsers(res.data)\n            }\n\n        } catch (error) {\n            console.error('API error:', error);\n            navigate('/signin');\n        }\n    }\n\n    useEffect(() => {\n        getAllUsers()\n    }, [status])\n\n    return (\n        <div className=\"p-4\">\n            <h2 className=\"text-2xl font-semibold mb-4 text-center\">User Table</h2>\n            <table className=\"w-full border-collapse border\">\n                <thead>\n                    <tr className=\"bg-gray-200\">\n                        <th className=\"p-2 border\">Name</th>\n                        <th className=\"p-2 border\">Email</th>\n                        <th className=\"p-2 border\">Phone</th>\n                        <th className=\"p-2 border\">DOB</th>\n                        <th className=\"p-2 border\">Address</th>\n                        <th className=\"p-2 border\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.length > 0 && users.map((user) => (\n                        <tr key={user.id} className=\"bg-white\">\n                            <td className=\"p-2 border text-center\">{user.name}</td>\n                            <td className=\"p-2 border text-center\">{user.email}</td>\n                            <td className=\"p-2 border text-center\">{user.phone}</td>\n                            <td className=\"p-2 border text-center\">{user.dob}</td>\n                            <td className=\"p-2 border text-center\">{user.address}</td>\n                            <td className=\"p-2 border text-center\">\n                                <button\n                                    className=\"text-blue-600 hover:underline mr-2\"\n                                    onClick={() => {\n\n                                        navigate('/', {\n                                            state: { editUser: user },\n                                        });\n\n                                    }}\n                                >\n                                    Edit\n                                </button>\n                                <button\n                                    className=\"text-red-600 hover:underline\"\n                                    onClick={() => handleDelete(user.id)}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserTable;\n","/Users/infranix/Desktop/nextjs /Task/task-app/src/Utils/Api.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":3,"column":13,"nodeType":"58","messageId":"59","endLine":3,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":16,"column":8,"nodeType":"62","endLine":16,"endColumn":15,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":18,"column":29,"nodeType":"66","messageId":"67","endLine":18,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":32,"column":29,"nodeType":"66","messageId":"67","endLine":32,"endColumn":31},{"ruleId":"60","severity":1,"message":"68","line":45,"column":8,"nodeType":"62","endLine":45,"endColumn":16,"suggestions":"69"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getAllUsers'. Either include it or remove the dependency array.",["71"],{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [navigate, token]",{"range":"76","text":"77"},"Update the dependencies array to be: [getAllUsers, status]",{"range":"78","text":"79"},[399,406],"[navigate, token]",[1018,1026],"[getAllUsers, status]"]